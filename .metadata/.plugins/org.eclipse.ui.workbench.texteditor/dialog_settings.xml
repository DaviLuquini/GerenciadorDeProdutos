<?xml version="1.0" encoding="UTF-8"?>
<section name="Workbench">
	<item key="hasShownOverlayPopupBefore" value="true"/>
	<item key="replaceBarOpen" value="false"/>
	<section name="org.eclipse.ui.texteditor.FindReplaceDialog">
		<item key="selection" value="&#x0D;&#x0A;import GestaoDeProdutos.Entidades.*;&#x0D;&#x0A;import GestaoDeProdutos.Infraestrutura.*;&#x0D;&#x0A;import GestaoDeProdutos.Servico.EstoqueManager;&#x0D;&#x0A;&#x0D;&#x0A;public class Programa {&#x0D;&#x0A;    public static void main(String[] args) {&#x0D;&#x0A;        // Inicializando o repositório, fábrica e serviço&#x0D;&#x0A;        IProdutoRepositorio produtoRepositorio = new ProdutoRepositorio();&#x0D;&#x0A;        IProdutoFabrica produtoFabrica = new ProdutoFabrica();&#x0D;&#x0A;        EstoqueManager estoqueManagerServico = new EstoqueManager(produtoRepositorio, produtoFabrica);&#x0D;&#x0A;&#x0D;&#x0A;        // Adicionando uma Camisa&#x0D;&#x0A;        estoqueManagerServico.adicionarProduto(1, &quot;Camisa Polo&quot;, 10, 49.90, &quot;Curta&quot;, &quot;M&quot;);&#x0D;&#x0A;&#x0D;&#x0A;        // Adicionando uma Bermuda&#x0D;&#x0A;        estoqueManagerServico.adicionarProduto(2, &quot;Bermuda Jeans&quot;, 5, 79.90, &quot;Azul&quot;, 38);&#x0D;&#x0A;&#x0D;&#x0A;        // Listando todos os produtos&#x0D;&#x0A;        System.out.println(&quot;\nLista de produtos no estoque:&quot;);&#x0D;&#x0A;        estoqueManagerServico.listarProdutos();&#x0D;&#x0A;&#x0D;&#x0A;        // Atualizando a quantidade de uma Camisa&#x0D;&#x0A;        System.out.println(&quot;\nAtualizando a quantidade de Camisa Polo para 15...&quot;);&#x0D;&#x0A;        camisa.setQuantidade(15);&#x0D;&#x0A;        estoqueManagerServico.atualizarQuantidade(camisa.getCodigo(), camisa.getQuantidade());&#x0D;&#x0A;&#x0D;&#x0A;        // Listando todos os produtos novamente para ver a atualização&#x0D;&#x0A;        System.out.println(&quot;\nLista de produtos após atualização:&quot;);&#x0D;&#x0A;        estoqueManagerServico.listarProdutos();&#x0D;&#x0A;&#x0D;&#x0A;        // Removendo a Bermuda do estoque&#x0D;&#x0A;        System.out.println(&quot;\nRemovendo Bermuda Jeans do estoque...&quot;);&#x0D;&#x0A;        estoqueManagerServico.removerProduto(bermuda.getCodigo());&#x0D;&#x0A;&#x0D;&#x0A;        // Listando todos os produtos para verificar a remoção&#x0D;&#x0A;        System.out.println(&quot;\nLista de produtos após remoção:&quot;);&#x0D;&#x0A;        estoqueManagerServico.listarProdutos();&#x0D;&#x0A;&#x0D;&#x0A;        // Tentando buscar um produto que não existe&#x0D;&#x0A;        System.out.println(&quot;\nBuscando um produto inexistente:&quot;);&#x0D;&#x0A;        estoqueManagerServico.buscarProduto(3);&#x0D;&#x0A;    }&#x0D;&#x0A;}&#x0D;&#x0A;"/>
		<list key="findhistory">
			<item value="&#x0D;&#x0A;import GestaoDeProdutos.Entidades.*;&#x0D;&#x0A;import GestaoDeProdutos.Infraestrutura.*;&#x0D;&#x0A;import GestaoDeProdutos.Servico.EstoqueManager;&#x0D;&#x0A;&#x0D;&#x0A;public class Programa {&#x0D;&#x0A;    public static void main(String[] args) {&#x0D;&#x0A;        // Inicializando o repositório, fábrica e serviço&#x0D;&#x0A;        IProdutoRepositorio produtoRepositorio = new ProdutoRepositorio();&#x0D;&#x0A;        IProdutoFabrica produtoFabrica = new ProdutoFabrica();&#x0D;&#x0A;        EstoqueManager estoqueManagerServico = new EstoqueManager(produtoRepositorio, produtoFabrica);&#x0D;&#x0A;&#x0D;&#x0A;        // Adicionando uma Camisa&#x0D;&#x0A;        estoqueManagerServico.adicionarProduto(1, &quot;Camisa Polo&quot;, 10, 49.90, &quot;Curta&quot;, &quot;M&quot;);&#x0D;&#x0A;&#x0D;&#x0A;        // Adicionando uma Bermuda&#x0D;&#x0A;        estoqueManagerServico.adicionarProduto(2, &quot;Bermuda Jeans&quot;, 5, 79.90, &quot;Azul&quot;, 38);&#x0D;&#x0A;&#x0D;&#x0A;        // Listando todos os produtos&#x0D;&#x0A;        System.out.println(&quot;\nLista de produtos no estoque:&quot;);&#x0D;&#x0A;        estoqueManagerServico.listarProdutos();&#x0D;&#x0A;&#x0D;&#x0A;        // Atualizando a quantidade de uma Camisa&#x0D;&#x0A;        System.out.println(&quot;\nAtualizando a quantidade de Camisa Polo para 15...&quot;);&#x0D;&#x0A;        camisa.setQuantidade(15);&#x0D;&#x0A;        estoqueManagerServico.atualizarQuantidade(camisa.getCodigo(), camisa.getQuantidade());&#x0D;&#x0A;&#x0D;&#x0A;        // Listando todos os produtos novamente para ver a atualização&#x0D;&#x0A;        System.out.println(&quot;\nLista de produtos após atualização:&quot;);&#x0D;&#x0A;        estoqueManagerServico.listarProdutos();&#x0D;&#x0A;&#x0D;&#x0A;        // Removendo a Bermuda do estoque&#x0D;&#x0A;        System.out.println(&quot;\nRemovendo Bermuda Jeans do estoque...&quot;);&#x0D;&#x0A;        estoqueManagerServico.removerProduto(bermuda.getCodigo());&#x0D;&#x0A;&#x0D;&#x0A;        // Listando todos os produtos para verificar a remoção&#x0D;&#x0A;        System.out.println(&quot;\nLista de produtos após remoção:&quot;);&#x0D;&#x0A;        estoqueManagerServico.listarProdutos();&#x0D;&#x0A;&#x0D;&#x0A;        // Tentando buscar um produto que não existe&#x0D;&#x0A;        System.out.println(&quot;\nBuscando um produto inexistente:&quot;);&#x0D;&#x0A;        estoqueManagerServico.buscarProduto(3);&#x0D;&#x0A;    }&#x0D;&#x0A;}&#x0D;&#x0A;"/>
			<item value="package GestaoDeProdutos.Servico;"/>
		</list>
	</section>
</section>
